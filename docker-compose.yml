version: '3'

services:
  web:
    image: elk:7.14.0
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    # volumes:
    #   - logs_volume:/src/logs
    #   - static_volume:/src/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - elasticsearch
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    restart: always
    volumes:
      - elasticsearch_volume:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
    networks:
      - elastic

volumes:
  static_volume:
  elasticsearch_volume:
  logs_volume:

networks:
  elastic:
    driver: bridge

  # kibana:
  #   image: kibana:7.14.0
  #   container_name: kibana
  #   build:
  #     context: .docker/kibana
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #     - logstash
  #   networks:
  #     - elastic

  # filebeat:
  #   image: filebeat:7.14.0
  #   container_name: filebeat
  #   build: 
  #     context: .docker/filebeat
  #     dockerfile: Dockerfile
  #   volumes:
  #     - logs_volume:/app/logs
  #   command: filebeat -c /usr/share/filebeat/filebeat.yml -e -d "*" -strict.perms=false
  #   depends_on:
  #     - web
    # networks:
    #   - elastic

  # logstash:
  #   image: logstash:7.14.0
  #   container_name: logstash
  #   restart: always
  #   build:
  #     context: .docker/logstash
  #     dockerfile: Dockerfile
  #   volumes:
  #     - logs_volume:/logs:ro
  #   # volumes:
  #   #   - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   command: logstash -f /usr/share/logstash/pipeline/logstash.conf
  #   depends_on:
  #     - elasticsearch
    # networks:
    #   - elastic    

      


